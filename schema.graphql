enum ProposalStatus {
  NONE
  REJECTED
  APPROVED
}

"A spending proposal"
type Proposal @entity {
  "The account proposing it"
  proposer: Bytes!

  "The (total) amount that should be paid if the proposal is accepted"
  value: BigInt!

  "The account to whom the payment should be made if the proposal is accepted"
  beneficiary: Bytes!

  "The amount held on deposit (reserved) for making this proposal"
  bond: BigInt!

  proposalIndex: BigInt! @unique

  status: ProposalStatus
}

"The members who have voted for the tip."
type Tipper @entity {
  tip: Tip!
  tipper: Bytes!
  tipValue: BigInt!
}

type Tip @entity {
  "The hash of the reason for the tip."
  reason: Bytes! @unique

  "The account to be tipped."
  who: Bytes!

  "The account who began this tip."
  finder: Bytes!

  "The amount held on deposit for this tip."
  deposit: BigInt

  "The block number at which this tip will close if Some."
  closes: BigInt

  "The members who have voted for this tip."
  tippers: [Tipper!] @derivedFrom(field: "tip")

  "Whether this tip should result in the finder taking a fee."
  findersFee: Boolean!

  "Cancel the process of tipping"
  retracted: Boolean!
}
