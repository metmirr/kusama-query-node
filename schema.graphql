" A spending proposal "
type Proposal @entity {
  " The account proposing it "
  proposer: String!

  " The (total) amount that should be paid if the proposal is accepted "
  value: BigDecimal!

  " The account to whom the payment should be made if the proposal is accepted "
  beneficiary: String!

  " The amount held on deposit (reserved) for making this proposal "
  bond: BigDecimal!

  proposalIndex: BigDecimal! @unique

  rejected: Boolean!

  approved: Boolean!
}

type Member @entity {
  accountId: String!
}

type MemberTip @entity {
  tipper: Member!
  tipValue: BigDecimal!

  tip: Tip!
}

type Tip @entity {
  " The hash of the reason for the tip. "
  reason: String!

  " The account to be tipped. "
  who: String!

  " The account who began this tip. "
  tipper: String!

  " The amount held on deposit for this tip. "
  deposit: BigDecimal!

  """
  The block number at which this tip will close if Some. If None, then no closing is
  scheduled.
  """
  closes: BigInt

  " The members who have voted for this tip. "
  memberTips: [MemberTip!] @derivedFrom(field: "tip")

  " Whether this tip should result in the finder taking a fee. "
  findersFee: Boolean!
}
